
TUID StaffMember (
    id,
    main no varchar(50),--编号
    main name varchar(200),--名称
    gender int, --性别 0 不确定,1 男,2 女
    image varchar(500), --头像
    note varchar(500),--备注
    disabled int,--禁用
    ARR department
    (
        owner,
        id,
        department id Department, --所属部门
        position varchar(100) --职位
    ),
    unique(no),--设置不能有重复值的字段
    search(no, name) --定义检索字段
    --index 索引名称(字段名1,字段名2) 其他参数--自定义索引
);

MAP StaffDepartment ver 1.0(
    KEY Staff ID StaffMember,
    KEY Department ID Department,
    level int
);

ACTION SaveStaffDepartment(
    ARR arr1(
    staff ID StaffMember,
    department ID Department,
    level int)
)
RETURNS rets(
    ret int
)
{
    FOREACH arr1{
        --BOOK 账名 at(关键字值1,关键字值2,....) set 字段名称1=值,字段名称2+=值,字段名称3-=值
        BOOK StaffDepartment AT(staff, department) SET level += level; --  del if level=0; -- level+=level 表示加账, level-=level 表示减账 level=level表示更新
        --DELETE from 账名称 where 条件 
        
    }
};

QUERY QueryStaffMember (
    key varchar(100)--参数
)
Returns department(
    owner int,
    id int,
    department int,
    position varchar(100)
) 
PAGE (
    id bigint start 0 asc,//分页查询必需
    no varchar(50),--编号
    name varchar(200),--名称
    gender int, --性别 0 不确定,1 男,2 女
    image varchar(500), --头像
    note varchar(500),--备注
    disabled int
)
{
    var _key varchar(100);
    set _key = concat('%', key, '%');

    TABLE temp(id int);//创建临时表
    into temp
    select a.id from StaffMember as a 
    where a.id>$pageStart and (
        a.no like _key or a.name like _key
    ) 
    order by a.id asc
    limit $pageSize;

    page select b.id,b.no,b.name,b.gender,b.image,b.note,b.disabled
        from temp as a 
        left join StaffMember as b on a.id=b.id    
        order by b.id asc;

    into department select b.owner,b.id,b.department,b.position 
                    from temp as a 
                    left join StaffMember.department as b on a.id=b.owner
                    order by b.owner asc,b.id asc;

};